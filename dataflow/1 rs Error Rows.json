{
	"name": "1 rs Error Rows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "1_Error_Rows",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQL_database_dataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "databaseA_dataset",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          ename as string,",
				"          date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(isNull(toDate(date, 'dd-MMM-yyyy')),",
				"     disjoint: false) ~> split1@(ErrorRows, GoodRows)",
				"split1@GoodRows derive(newdate = toDate(date, 'dd-MMM-yyyy')) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          empid,",
				"          ename,",
				"          newdate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"split1@ErrorRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          empid as integer,",
				"          ename as string,",
				"          edate as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empid,",
				"          ename,",
				"          edate = date",
				"     )) ~> sink1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          empid as integer,",
				"          ename as string,",
				"          edate as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empid,",
				"          ename,",
				"          edate = newdate",
				"     )) ~> sink2"
			]
		}
	}
}